package eole;

import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import java.awt.GridLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import java.awt.FlowLayout;
import javax.swing.JPopupMenu;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import com.jgoodies.forms.layout.FormSpecs;
import javax.swing.JTextField;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.JButton;
import javax.swing.JTextPane;
import javax.swing.JList;
import javax.swing.JComboBox;
import javax.swing.ListSelectionModel;
import javax.swing.border.BevelBorder;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import javax.swing.SwingConstants;

public class Resultat extends Outils {
	private JTable tblClasse1;
	private JTable tblClasse2;
	private JTable tblClasse3;
	private JTable tblClasse4;
	public Resultat(String NumRegate){
		JFrame frame  = new JFrame("Résultat Régate");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frame.setSize(706,722);
		frame.getContentPane().setLayout(new BorderLayout(0,0));
		
		JPanel panel = new JPanel();
		frame.getContentPane().add(panel, BorderLayout.CENTER);
		panel.setLayout(null);
		
		tblClasse1 = new JTable();
		DefaultTableModel modele = new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"Position", "NomVoilier", "NomSkipper", "Temps", "Rating"
			}
		);
		tblClasse1.setModel(modele);
		tblClasse1.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tblClasse1.setBounds(36, 74, 622, 129);
		panel.add(tblClasse1);
		
		Connection conn;
    	String requete = "Select * From Participer Where NumRegate = " + NumRegate;
		try {
			conn = DriverManager.getConnection(cheminBdd);
	    	Statement s = conn.createStatement();
	    	ResultSet rs = s.executeQuery(requete);
	    	while (rs.next()) {
	    		modele.addRow(new Object[] {rs.getString(1), rs.getString(2), rs.getString(3)});
	    	}
	    	conn.close();
	    	s.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		tblClasse2 = new JTable();
		tblClasse2.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"Position", "NomVolier", "NomSkipper", "Temps", "Rating"
			}
		) {
			Class[] columnTypes = new Class[] {
				Integer.class, String.class, String.class, String.class, Integer.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
			boolean[] columnEditables = new boolean[] {
				false, false, false, false, false
			};
			public boolean isCellEditable(int row, int column) {
				return columnEditables[column];
			}
		});
		tblClasse2.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tblClasse2.setBounds(36, 227, 622, 129);
		panel.add(tblClasse2);
		
		tblClasse3 = new JTable();
		tblClasse3.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"Position", "NomVolier", "NomSkipper", "Temps", "Rating"
			}
		) {
			Class[] columnTypes = new Class[] {
				Integer.class, String.class, String.class, String.class, Integer.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
			boolean[] columnEditables = new boolean[] {
				false, false, false, false, false
			};
			public boolean isCellEditable(int row, int column) {
				return columnEditables[column];
			}
		});
		tblClasse3.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tblClasse3.setBounds(36, 378, 622, 129);
		panel.add(tblClasse3);
		
		tblClasse4 = new JTable();
		tblClasse4.setModel(new DefaultTableModel(
			new Object[][] {
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
				{null, null, null, null, null},
			},
			new String[] {
				"Position", "NomVoilier", "NomSkipper", "Temps", "Rating"
			}
		) {
			Class[] columnTypes = new Class[] {
				Integer.class, String.class, String.class, String.class, Integer.class
			};
			public Class getColumnClass(int columnIndex) {
				return columnTypes[columnIndex];
			}
			boolean[] columnEditables = new boolean[] {
				false, false, false, false, false
			};
			public boolean isCellEditable(int row, int column) {
				return columnEditables[column];
			}
		});
		tblClasse4.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		tblClasse4.setBounds(36, 529, 622, 129);
		panel.add(tblClasse4);
		
		JLabel lblRsultatDeLa = new JLabel("R\u00E9sultats de la r\u00E9gate :");
		lblRsultatDeLa.setFont(new Font("Tahoma", Font.BOLD, 19));
		lblRsultatDeLa.setBounds(237, 11, 251, 41);
		panel.add(lblRsultatDeLa);
		
		JLabel lblClasse1 = new JLabel("Classe 1");
		lblClasse1.setBounds(36, 62, 46, 14);
		panel.add(lblClasse1);
		
		JLabel lblClasse2 = new JLabel("Classe 2");
		lblClasse2.setBounds(36, 213, 46, 14);
		panel.add(lblClasse2);
		
		JLabel lblClasse3 = new JLabel("Classe 3");
		lblClasse3.setBounds(36, 364, 46, 14);
		panel.add(lblClasse3);
		
		JLabel lblClasse4 = new JLabel("Classe 4");
		lblClasse4.setBounds(36, 516, 46, 14);
		panel.add(lblClasse4);
		
		
		frame.setVisible(true);
	}
}
